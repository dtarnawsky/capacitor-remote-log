{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { WebPlugin } from '@capacitor/core';\n\nimport type {\n  Options,\n  CapacitorRemoteLoggerPlugin,\n  LogMessage,\n} from './definitions';\n\nexport class RemoteLoggerWeb\n  extends WebPlugin\n  implements CapacitorRemoteLoggerPlugin {\n  private static that: any;\n  private static privateLog: (...data: any[]) => void;\n  private static privateWarn: (...data: any[]) => void;\n  private static privateError: (...data: any[]) => void;\n  private static privateInfo: (...data: any[]) => void;\n  public hostName = '';\n  public port = 8942;\n\n  private deviceIdentifier: string | undefined;\n  private pending: undefined | any[] = undefined;\n\n  constructor() {\n    super();\n\n    if (RemoteLoggerWeb.that === undefined) {\n      RemoteLoggerWeb.that = this;\n\n      RemoteLoggerWeb.privateLog = window.console.log;\n      RemoteLoggerWeb.privateWarn = window.console.warn;\n      RemoteLoggerWeb.privateError = window.console.error;\n      RemoteLoggerWeb.privateInfo = window.console.info;\n      window.console.log = this.log;\n      window.console.warn = this.warn;\n      window.console.error = this.error;\n      window.console.info = this.info;\n    }\n\n    this.notifyListeners('logStatusChange', {\n      code: 'code',\n      message: 'RemoteLogger Started.',\n    });\n  }\n\n  public write(ob: LogMessage): Promise<void> {\n    switch (ob.level) {\n      case 'warn':\n        this.warn(ob.message);\n        break;\n      case 'error':\n        this.error(ob.message);\n        break;\n      case 'info':\n        this.info(ob.message);\n        break;\n      default:\n        this.log(ob.message);\n    }\n    return Promise.resolve();\n  }\n\n  public log(message: any, ...args: any[]): void {\n    RemoteLoggerWeb.privateLog.call(this, message, ...args);\n    RemoteLoggerWeb.that.push(message, args, 'log');\n  }\n\n  public warn(message: any, ...args: any[]): void {\n    RemoteLoggerWeb.privateWarn.call(this, message, ...args);\n    RemoteLoggerWeb.that.push(message, args, 'warn');\n  }\n\n  public error(message: any, ...args: any[]): void {\n    RemoteLoggerWeb.privateError.call(this, message, ...args);\n    RemoteLoggerWeb.that.push(message, args, 'error');\n  }\n\n  public info(message: any, ...args: any[]): void {\n    RemoteLoggerWeb.privateInfo.call(this, message, ...args);\n    RemoteLoggerWeb.that.push(message, args, 'info');\n  }\n\n  public initialize(options: Options): Promise<void> {\n    let lastUrl: string;\n    if (options?.hostName) {\n      RemoteLoggerWeb.that.hostName = options.hostName;\n    }\n    if (options?.port) {\n      RemoteLoggerWeb.that.port = options.port;\n    }\n    this.post('/devices', {\n      id: this.getDeviceIdentifier(),\n      userAgent: window.navigator.userAgent,\n      title: window.document.title,\n    });\n\n    // Report urls\n    setInterval(() => {\n      if (document.location.href !== lastUrl) {\n        lastUrl = document.location.href;\n        this.log(`Url changed to ${lastUrl}`);\n      }\n    }, 1000);\n    return Promise.resolve();\n  }\n\n  async post(url: string, data: any): Promise<any> {\n    const remoteHost = RemoteLoggerWeb.that.hostName + ':' + RemoteLoggerWeb.that.port;\n    if (!data) {\n      return Promise.resolve();\n    }\n    const remoteUrl = `http://${remoteHost}${url}`;\n    try {\n      //@ts-ignore\n      const response: Response = await fetch(remoteUrl, {\n        method: 'post',\n        headers: {\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n    } catch (e) {\n      // Logging should cause failures\n      RemoteLoggerWeb.privateLog.call(\n        this,\n        `Failed to post to ${remoteUrl}`,\n        data,\n      );\n    }\n  }\n\n  //@ts-ignore\n  private push(message: any, _arguments: any, level: any): void {\n    const args = Array.prototype.slice.call(_arguments);\n    let msg = message;\n    args.forEach(element => {\n      if (msg !== '') {\n        msg += ' ';\n      }\n      if (typeof element == 'object') {\n        msg += JSON.stringify(element);\n      } else {\n        msg += element;\n      }\n    });\n    // Commenting out for now. Stack is hard as it may be in the source map\n    //const stack = this.getStack();\n\n    if (!this.pending) {\n      setTimeout(() => {\n        // Push pending log entries. We wait around for 1 second to see how much accumulates\n        this.post('/log', this.pending);\n        this.pending = undefined;\n      }, 500);\n      this.pending = [];\n    }\n    this.pending.push({\n      id: this.getDeviceIdentifier(),\n      message: msg,\n      level,\n      stack: undefined,\n    }); // this.getStack() });\n  }\n\n  private getDeviceIdentifier(): string {\n    if (this.deviceIdentifier) {\n      return this.deviceIdentifier.toString();\n    }\n    const tmp = localStorage.IonicLoggerDeviceId;\n    let id: number = parseInt(tmp, 10);\n    if (tmp == null || isNaN(id)) {\n      // Create a random device identifier\n      id = Math.floor(Math.random() * 999999999);\n      localStorage.IonicLoggerDeviceId = id;\n    }\n    this.deviceIdentifier = id.toString();\n    return id.toString();\n  }\n}\n\nconst CapacitorRemoteLogger = new RemoteLoggerWeb();\n\nexport { CapacitorRemoteLogger };\n"]}